<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\mainApp.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\mainApp.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Tue Nov 01 02:30:06 2016
<BR><P>
<H3>Maximum Stack Usage =        188 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ADDON_BOARD_Update &rArr; RPI_Update &rArr; RPI_GetInfoFromPackage &rArr; BOX_CONTROLLER_SetState &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[21]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4f]">DEBUG_LfFcn</a> from debug.o(i.DEBUG_LfFcn) referenced from debug.o(i.DEBUG_Init)
 <LI><a href="#[4e]">DEBUG_UartFullFcn</a> from debug.o(i.DEBUG_UartFullFcn) referenced from debug.o(i.DEBUG_Init)
 <LI><a href="#[1a]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel2_IRQHandler</a> from stm32f10x_it.o(i.DMA1_Channel2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel3_IRQHandler</a> from stm32f10x_it.o(i.DMA1_Channel3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel5_IRQHandler</a> from stm32f10x_it.o(i.DMA1_Channel5_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">DMA1_Channel6_IRQHandler</a> from stm32f10x_it.o(i.DMA1_Channel6_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[49]">DMA2_Channel3_IRQHandler</a> from stm32f10x_it.o(i.DMA2_Channel3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4a]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[c]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">EXTI0_IRQHandler</a> from stm32f10x_it.o(i.EXTI0_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[59]">JIECANG_BOX_GetStatus</a> from jiecangbox.o(i.JIECANG_BOX_GetStatus) referenced from jiecangbox.o(.constdata)
 <LI><a href="#[57]">JIECANG_BOX_MoveDown</a> from jiecangbox.o(i.JIECANG_BOX_MoveDown) referenced from jiecangbox.o(.constdata)
 <LI><a href="#[5a]">JIECANG_BOX_MoveToPos1</a> from jiecangbox.o(i.JIECANG_BOX_MoveToPos1) referenced from jiecangbox.o(.constdata)
 <LI><a href="#[5b]">JIECANG_BOX_MoveToPos2</a> from jiecangbox.o(i.JIECANG_BOX_MoveToPos2) referenced from jiecangbox.o(.constdata)
 <LI><a href="#[56]">JIECANG_BOX_MoveUp</a> from jiecangbox.o(i.JIECANG_BOX_MoveUp) referenced from jiecangbox.o(.constdata)
 <LI><a href="#[5c]">JIECANG_BOX_SaveCurrentHeightToPos1</a> from jiecangbox.o(i.JIECANG_BOX_SaveCurrentHeightToPos1) referenced from jiecangbox.o(.constdata)
 <LI><a href="#[5d]">JIECANG_BOX_SaveCurrentHeightToPos2</a> from jiecangbox.o(i.JIECANG_BOX_SaveCurrentHeightToPos2) referenced from jiecangbox.o(.constdata)
 <LI><a href="#[58]">JIECANG_BOX_StopMove</a> from jiecangbox.o(i.JIECANG_BOX_StopMove) referenced from jiecangbox.o(.constdata)
 <LI><a href="#[52]">JIECANG_DownModeTimeoutFcn</a> from jiecangbox.o(i.JIECANG_DownModeTimeoutFcn) referenced from jiecangbox.o(i.JIECANG_BOX_Init)
 <LI><a href="#[51]">JIECANG_UpModeTimeoutFcn</a> from jiecangbox.o(i.JIECANG_UpModeTimeoutFcn) referenced from jiecangbox.o(i.JIECANG_BOX_Init)
 <LI><a href="#[50]">JIECANG_heightTimerFcn</a> from jiecangbox.o(i.JIECANG_heightTimerFcn) referenced from jiecangbox.o(i.JIECANG_BOX_Init)
 <LI><a href="#[8]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[10]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">RCC_IRQHandler</a> from stm32f10x_it.o(i.RCC_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4c]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[11]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">TIM4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">TIM6_IRQHandler</a> from stm32f10x_it.o(i.TIM6_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[46]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5f]">TIM_BOX_DownApi</a> from timbox.o(i.TIM_BOX_DownApi) referenced from timbox.o(.constdata)
 <LI><a href="#[62]">TIM_BOX_MovePos1Api</a> from timbox.o(i.TIM_BOX_MovePos1Api) referenced from timbox.o(.constdata)
 <LI><a href="#[63]">TIM_BOX_MovePos2Api</a> from timbox.o(i.TIM_BOX_MovePos2Api) referenced from timbox.o(.constdata)
 <LI><a href="#[64]">TIM_BOX_MovePos3Api</a> from timbox.o(i.TIM_BOX_MovePos3Api) referenced from timbox.o(.constdata)
 <LI><a href="#[65]">TIM_BOX_MovePos4Api</a> from timbox.o(i.TIM_BOX_MovePos4Api) referenced from timbox.o(.constdata)
 <LI><a href="#[61]">TIM_BOX_ResetApi</a> from timbox.o(i.TIM_BOX_ResetApi) referenced from timbox.o(.constdata)
 <LI><a href="#[66]">TIM_BOX_SaveApi</a> from timbox.o(i.TIM_BOX_SaveApi) referenced from timbox.o(.constdata)
 <LI><a href="#[60]">TIM_BOX_StopApi</a> from timbox.o(i.TIM_BOX_StopApi) referenced from timbox.o(.constdata)
 <LI><a href="#[53]">TIM_BOX_TimeoutFcn</a> from timbox.o(i.TIM_BOX_TimeoutFcn) referenced from timbox.o(i.TIM_BOX_Init)
 <LI><a href="#[5e]">TIM_BOX_UpApi</a> from timbox.o(i.TIM_BOX_UpApi) referenced from timbox.o(.constdata)
 <LI><a href="#[54]">TIM_BOX_heighCheckFcn</a> from timbox.o(i.TIM_BOX_heighCheckFcn) referenced from timbox.o(i.TIM_BOX_Init)
 <LI><a href="#[2]">TIM_HANDSET_DisplayHeight</a> from timhandset.o(i.TIM_HANDSET_DisplayHeight) referenced 10 times from buttonleds.o(.data)
 <LI><a href="#[0]">TIM_HANDSET_Init</a> from timhandset.o(i.TIM_HANDSET_Init) referenced 10 times from buttonleds.o(.data)
 <LI><a href="#[3]">TIM_HANDSET_Run</a> from timhandset.o(i.TIM_HANDSET_Run) referenced 10 times from buttonleds.o(.data)
 <LI><a href="#[1]">TIM_HANDSET_Update</a> from timhandset.o(i.TIM_HANDSET_Update) referenced 10 times from buttonleds.o(.data)
 <LI><a href="#[4]">TIM_HANDSET_rxCpy</a> from timhandset.o(i.TIM_HANDSET_rxCpy) referenced 10 times from buttonleds.o(.data)
 <LI><a href="#[43]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">UART5_IRQHandler</a> from stm32f10x_it.o(i.UART5_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">USART1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">USART2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">USART3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[55]">fputc</a> from myuart.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[4b]">main</a> from main_1.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[129]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[67]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[12a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[12b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[12c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[12d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[12e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_JIE_array2struct
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_rxCpy
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_Array2struct
</UL>

<P><STRONG><a name="[12f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[131]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_ClearRxBuffer
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_rxCpy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_rxCpy
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMOTION_rxCpy
</UL>

<P><STRONG><a name="[133]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[b1]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
</UL>

<P><STRONG><a name="[134]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[68]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[135]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>ADDON_BOARD_Init</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, addonboard.o(i.ADDON_BOARD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ADDON_BOARD_Init &rArr; DEBUG_Init &rArr; UART5_defaultInit &rArr; UART5_init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_On
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>ADDON_BOARD_Update</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, addonboard.o(i.ADDON_BOARD_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = ADDON_BOARD_Update &rArr; RPI_Update &rArr; RPI_GetInfoFromPackage &rArr; BOX_CONTROLLER_SetState &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_Update
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Update
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Update
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>AddonFrame_Array2struct</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dataframe.o(i.AddonFrame_Array2struct))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AddonFrame_Array2struct
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBL_DmaCallback
</UL>

<P><STRONG><a name="[82]"></a>AddonFrame_struct2Array</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dataframe.o(i.AddonFrame_struct2Array))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AddonFrame_struct2Array
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_UpMblLed
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_UpHsLed
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopMblLed
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopHsLed
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StandMblLed
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_SitMblLed
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_MicMblLed
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_DownMblLed
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_DownHsLed
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_SaveStandLed
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_SaveSitLed
</UL>

<P><STRONG><a name="[78]"></a>BOX_CONTROLLER_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, boxcontroller.o(i.BOX_CONTROLLER_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = BOX_CONTROLLER_Init &rArr; TIM_BOX_Init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[85]"></a>BOX_CONTROLLER_Run</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, boxcontroller.o(i.BOX_CONTROLLER_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = BOX_CONTROLLER_Run &rArr; TIM_BOX_Run &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetDetectStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetConnectStatus
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[8a]"></a>BOX_CONTROLLER_SetHeight</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, boxcontroller.o(i.BOX_CONTROLLER_SetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BOX_CONTROLLER_SetHeight &rArr; TIM_BOX_GetDetectStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetDetectStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetConnectStatus
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetHeight
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
</UL>

<P><STRONG><a name="[8d]"></a>BOX_CONTROLLER_SetMode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, boxcontroller.o(i.BOX_CONTROLLER_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BOX_CONTROLLER_SetMode &rArr; TIM_BOX_GetDetectStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetDetectStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetConnectStatus
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetMode
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[90]"></a>BOX_CONTROLLER_SetState</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, boxcontroller.o(i.BOX_CONTROLLER_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = BOX_CONTROLLER_SetState &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetDetectStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetConnectStatus
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetState
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetMode
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetHeight
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SaveStandPos
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SaveSitPos
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ReadStandPosHeight
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ReadSitPosHeight
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetState
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[7f]"></a>BOX_CONTROLLER_Update</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, boxcontroller.o(i.BOX_CONTROLLER_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = BOX_CONTROLLER_Update &rArr; TIM_BOX_Update &rArr; RPI_UpdateCurrentHeight &rArr; RPI_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetDetectStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetConnectStatus
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Update
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Update
</UL>

<P><STRONG><a name="[77]"></a>BUTTON_LEDS_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LEDS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = BUTTON_LEDS_Init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_SetRxDmaIntPriority
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopHsLed
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[9e]"></a>BUTTON_LEDS_SaveSitLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LEDS_SaveSitLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LEDS_SaveSitLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[a0]"></a>BUTTON_LEDS_SaveStandLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LEDS_SaveStandLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LEDS_SaveStandLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[a1]"></a>BUTTON_LED_DownHsLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_DownHsLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LED_DownHsLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_HsDown
</UL>

<P><STRONG><a name="[a2]"></a>BUTTON_LED_DownMblLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_DownMblLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LED_DownMblLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[a3]"></a>BUTTON_LED_MicMblLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_MicMblLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LED_MicMblLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[a4]"></a>BUTTON_LED_SitMblLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_SitMblLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LED_SitMblLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[a5]"></a>BUTTON_LED_StandMblLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_StandMblLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LED_StandMblLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[9d]"></a>BUTTON_LED_StopHsLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_StopHsLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LED_StopHsLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_heightTimerFcn
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_Init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_HsStop
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_HsReset
</UL>

<P><STRONG><a name="[a6]"></a>BUTTON_LED_StopMblLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_StopMblLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LED_StopMblLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[a7]"></a>BUTTON_LED_UpHsLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_UpHsLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LED_UpHsLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_HsUp
</UL>

<P><STRONG><a name="[a8]"></a>BUTTON_LED_UpMblLed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_UpMblLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BUTTON_LED_UpMblLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_struct2Array
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_Update
</UL>

<P><STRONG><a name="[7e]"></a>BUTTON_LED_Update</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, buttonleds.o(i.BUTTON_LED_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = BUTTON_LED_Update &rArr; BOX_CONTROLLER_SetState &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetMode
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_UpMblLed
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopMblLed
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StandMblLed
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_SitMblLed
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_MicMblLed
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_DownMblLed
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_SaveStandLed
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_SaveSitLed
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Update
</UL>

<P><STRONG><a name="[9f]"></a>BUTTON_LED_putBytes</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, buttonleds.o(i.BUTTON_LED_putBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_UpMblLed
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_UpHsLed
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopMblLed
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopHsLed
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StandMblLed
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_SitMblLed
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_MicMblLed
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_DownMblLed
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_DownHsLed
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_SaveStandLed
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_SaveSitLed
</UL>

<P><STRONG><a name="[9]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>DEBUG_GetString</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, debug.o(i.DEBUG_GetString))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DEBUG_GetString &rArr; UART5_getString &rArr; UARTx_getString
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_getString
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>DEBUG_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, debug.o(i.DEBUG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DEBUG_Init &rArr; UART5_defaultInit &rArr; UART5_init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_defaultInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[4f]"></a>DEBUG_LfFcn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, debug.o(i.DEBUG_LfFcn))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DEBUG_LfFcn &rArr; DEBUG_Update &rArr; TIM_BOX_StopApi &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debug.o(i.DEBUG_Init)
</UL>
<P><STRONG><a name="[4e]"></a>DEBUG_UartFullFcn</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, debug.o(i.DEBUG_UartFullFcn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DEBUG_UartFullFcn &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_ClearRxBuffer
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> debug.o(i.DEBUG_Init)
</UL>
<P><STRONG><a name="[ae]"></a>DEBUG_Update</STRONG> (Thumb, 822 bytes, Stack size 8 bytes, debug.o(i.DEBUG_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DEBUG_Update &rArr; TIM_BOX_StopApi &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_On
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Off
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_ClearRxBuffer
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_putByte
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetDetectStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetConnectStatus
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_StopApi
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_ConnectStatus
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetState
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetHeight
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetState
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_UpMblLed
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_UpHsLed
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopMblLed
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopHsLed
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_MicMblLed
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_DownMblLed
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_DownHsLed
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_LfFcn
</UL>

<P><STRONG><a name="[1b]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f10x_it.o(i.DMA1_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f10x_it.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Channel3_IRQHandler &rArr; TIMOTION_DmaCallback &rArr; TIMOTION_rxCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetDetectStatus
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMOTION_DmaCallback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_DmaCallback
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetConnectStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f10x_it.o(i.DMA1_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Channel5_IRQHandler &rArr; TIM_HANDSET_DmaCallback &rArr; TIM_HANDSET_rxCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_DmaCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f10x_it.o(i.DMA1_Channel6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_DmaCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_it.o(i.DMA2_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Channel3_IRQHandler &rArr; MBL_DmaCallback &rArr; AddonFrame_Array2struct
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBL_DmaCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel3_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
</UL>

<P><STRONG><a name="[122]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>

<P><STRONG><a name="[120]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>

<P><STRONG><a name="[b5]"></a>DMA_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel3_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
</UL>

<P><STRONG><a name="[124]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_SetRxDmaIntPriority
</UL>

<P><STRONG><a name="[121]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>

<P><STRONG><a name="[ea]"></a>DataFrame_ArrayToStruct</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, dataframe.o(i.DataFrame_ArrayToStruct))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
</UL>

<P><STRONG><a name="[be]"></a>DataFrame_GetLength</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dataframe.o(i.DataFrame_GetLength))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_StructToArray
</UL>

<P><STRONG><a name="[eb]"></a>DataFrame_GetParams</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dataframe.o(i.DataFrame_GetParams))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
</UL>

<P><STRONG><a name="[bc]"></a>DataFrame_JIE_array2struct</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dataframe.o(i.DataFrame_JIE_array2struct))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DataFrame_JIE_array2struct
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
</UL>

<P><STRONG><a name="[d8]"></a>DataFrame_JIE_isValid</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, dataframe.o(i.DataFrame_JIE_isValid))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
</UL>

<P><STRONG><a name="[bd]"></a>DataFrame_StructToArray</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, dataframe.o(i.DataFrame_StructToArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DataFrame_StructToArray
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_UpdateChecksum
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_GetLength
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_UpdateCurrentHeight
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
</UL>

<P><STRONG><a name="[fa]"></a>DataFrame_TIM_array2struct</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dataframe.o(i.DataFrame_TIM_array2struct))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMOTION_GetHeightFromLongBuffer
</UL>

<P><STRONG><a name="[bf]"></a>DataFrame_UpdateChecksum</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, dataframe.o(i.DataFrame_UpdateChecksum))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_StructToArray
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_UpdateCurrentHeight
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
</UL>

<P><STRONG><a name="[ee]"></a>DataFrame_isValidpackage</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, dataframe.o(i.DataFrame_isValidpackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DataFrame_isValidpackage
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Update
</UL>

<P><STRONG><a name="[c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>EE_Init</STRONG> (Thumb, 488 bytes, Stack size 32 bytes, eeprom.o(i.EE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = EE_Init &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Format
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Init
</UL>

<P><STRONG><a name="[c4]"></a>EE_ReadVariable</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, eeprom.o(i.EE_ReadVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_FindValidPage
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Read
</UL>

<P><STRONG><a name="[c8]"></a>EE_WriteVariable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, eeprom.o(i.EE_WriteVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Write
</UL>

<P><STRONG><a name="[15]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f10x_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Format
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[ca]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetBank1Status))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[c2]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Format
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[df]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Init
</UL>

<P><STRONG><a name="[c9]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[ce]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
</UL>

<P><STRONG><a name="[cb]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetDetectStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetConnectStatus
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_ConnectStatus
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
</UL>

<P><STRONG><a name="[f2]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Standby_on
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Mute_on
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
</UL>

<P><STRONG><a name="[f0]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Standby_off
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Mute_off
</UL>

<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[7a]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Update
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[79]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[88]"></a>JIECANG_BOX_GetConnectStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_GetConnectStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = JIECANG_BOX_GetConnectStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Run
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Update
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetHeight
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetMode
</UL>

<P><STRONG><a name="[da]"></a>JIECANG_BOX_GetHeight</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jiecangbox.o(i.JIECANG_BOX_GetHeight))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_heightTimerFcn
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
</UL>

<P><STRONG><a name="[d0]"></a>JIECANG_BOX_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jiecangbox.o(i.JIECANG_BOX_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
</UL>

<P><STRONG><a name="[59]"></a>JIECANG_BOX_GetStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JIECANG_BOX_GetStatus &rArr; JIECANG_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>JIECANG_BOX_Init</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = JIECANG_BOX_Init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_SetRxDmaIntPriority
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetConnectStatus
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Init
</UL>

<P><STRONG><a name="[57]"></a>JIECANG_BOX_MoveDown</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_MoveDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JIECANG_BOX_MoveDown &rArr; JIECANG_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>JIECANG_BOX_MoveToPos1</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_MoveToPos1))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JIECANG_BOX_MoveToPos1 &rArr; JIECANG_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>JIECANG_BOX_MoveToPos2</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_MoveToPos2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JIECANG_BOX_MoveToPos2 &rArr; JIECANG_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>JIECANG_BOX_MoveUp</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_MoveUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JIECANG_BOX_MoveUp &rArr; JIECANG_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>JIECANG_BOX_PutBytes</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, jiecangbox.o(i.JIECANG_BOX_PutBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = JIECANG_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_StopMove
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SaveCurrentHeightToPos2
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SaveCurrentHeightToPos1
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_MoveUp
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_MoveToPos2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_MoveToPos1
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_MoveDown
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetStatus
</UL>

<P><STRONG><a name="[89]"></a>JIECANG_BOX_Run</STRONG> (Thumb, 686 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = JIECANG_BOX_Run &rArr; TIMER_cmdUp
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_stop
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_start
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_setVal
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_getVal
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_cmdUp
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_StopAllTimer
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_ResetAllTimer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetState
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetState
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Run
</UL>

<P><STRONG><a name="[5c]"></a>JIECANG_BOX_SaveCurrentHeightToPos1</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_SaveCurrentHeightToPos1))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JIECANG_BOX_SaveCurrentHeightToPos1 &rArr; JIECANG_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>JIECANG_BOX_SaveCurrentHeightToPos2</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_SaveCurrentHeightToPos2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JIECANG_BOX_SaveCurrentHeightToPos2 &rArr; JIECANG_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>JIECANG_BOX_SetHeight</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, jiecangbox.o(i.JIECANG_BOX_SetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = JIECANG_BOX_SetHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetHeight
</UL>

<P><STRONG><a name="[8f]"></a>JIECANG_BOX_SetMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jiecangbox.o(i.JIECANG_BOX_SetMode))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetHeight
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetMode
</UL>

<P><STRONG><a name="[92]"></a>JIECANG_BOX_SetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jiecangbox.o(i.JIECANG_BOX_SetState))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_heightTimerFcn
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
</UL>

<P><STRONG><a name="[58]"></a>JIECANG_BOX_StopMove</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_BOX_StopMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JIECANG_BOX_StopMove &rArr; JIECANG_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>JIECANG_BOX_Update</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, jiecangbox.o(i.JIECANG_BOX_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = JIECANG_BOX_Update &rArr; RPI_UpdateCurrentHeight &rArr; RPI_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_JIE_isValid
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_JIE_array2struct
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_UpdateCurrentHeight
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_GetHeightFromStruct
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_UpdateCurrentHeight
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetState
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetMode
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetHeight
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Update
</UL>

<P><STRONG><a name="[b8]"></a>JIECANG_DmaCallback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_DmaCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JIECANG_DmaCallback &rArr; JIECANG_rxCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_rxCpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[52]"></a>JIECANG_DownModeTimeoutFcn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jiecangbox.o(i.JIECANG_DownModeTimeoutFcn))
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(i.JIECANG_BOX_Init)
</UL>
<P><STRONG><a name="[d9]"></a>JIECANG_GetHeightFromStruct</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, jiecangbox.o(i.JIECANG_GetHeightFromStruct))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
</UL>

<P><STRONG><a name="[d5]"></a>JIECANG_ResetAllTimer</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_ResetAllTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = JIECANG_ResetAllTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_setVal
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
</UL>

<P><STRONG><a name="[d1]"></a>JIECANG_StopAllTimer</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_StopAllTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = JIECANG_StopAllTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
</UL>

<P><STRONG><a name="[51]"></a>JIECANG_UpModeTimeoutFcn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jiecangbox.o(i.JIECANG_UpModeTimeoutFcn))
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(i.JIECANG_BOX_Init)
</UL>
<P><STRONG><a name="[db]"></a>JIECANG_UpdateCurrentHeight</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jiecangbox.o(i.JIECANG_UpdateCurrentHeight))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
</UL>

<P><STRONG><a name="[50]"></a>JIECANG_heightTimerFcn</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_heightTimerFcn))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = JIECANG_heightTimerFcn &rArr; BUTTON_LED_StopHsLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_stop
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_setVal
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_SetState
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_GetHeight
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopHsLed
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jiecangbox.o(i.JIECANG_BOX_Init)
</UL>
<P><STRONG><a name="[dd]"></a>JIECANG_rxCpy</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, jiecangbox.o(i.JIECANG_rxCpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = JIECANG_rxCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_DmaCallback
</UL>

<P><STRONG><a name="[bb]"></a>MBL_DmaCallback</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, buttonleds.o(i.MBL_DmaCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MBL_DmaCallback &rArr; AddonFrame_Array2struct
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddonFrame_Array2struct
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[de]"></a>MY_FLASH_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, myflash.o(i.MY_FLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = MY_FLASH_Init &rArr; EE_Init &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e0]"></a>MY_FLASH_Read</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, myflash.o(i.MY_FLASH_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MY_FLASH_Read &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ReadStandPosHeight
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ReadSitPosHeight
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
</UL>

<P><STRONG><a name="[e1]"></a>MY_FLASH_Write</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, myflash.o(i.MY_FLASH_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SaveStandPos
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SaveSitPos
</UL>

<P><STRONG><a name="[8]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NMI_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ITConfig
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetITStatus
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11b]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_SetRxDmaIntPriority
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_setPriority
</UL>

<P><STRONG><a name="[11a]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_SetRxDmaIntPriority
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_setPriority
</UL>

<P><STRONG><a name="[d]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11f]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>

<P><STRONG><a name="[70]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[10d]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[cd]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
</UL>

<P><STRONG><a name="[10c]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[e5]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_IRQHandler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[125]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[e6]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_IRQHandler
</UL>

<P><STRONG><a name="[e2]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_IRQHandler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[e3]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[14]"></a>RCC_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_it.o(i.RCC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_IRQHandler &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetITStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e4]"></a>RCC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[71]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[e7]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_IRQHandler
</UL>

<P><STRONG><a name="[e8]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>RPI_ConnectStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rpi.o(i.RPI_ConnectStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RPI_ConnectStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
</UL>

<P><STRONG><a name="[ba]"></a>RPI_DmaCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rpi.o(i.RPI_DmaCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
</UL>

<P><STRONG><a name="[e9]"></a>RPI_GetInfoFromPackage</STRONG> (Thumb, 624 bytes, Stack size 24 bytes, rpi.o(i.RPI_GetInfoFromPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = RPI_GetInfoFromPackage &rArr; BOX_CONTROLLER_SetState &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_On
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Off
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_UpdateChecksum
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_StructToArray
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_GetParams
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_ArrayToStruct
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_PutBytes
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ReadStandPosHeight
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ReadSitPosHeight
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetHeight
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetHeight
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Update
</UL>

<P><STRONG><a name="[73]"></a>RPI_Init</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, rpi.o(i.RPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = RPI_Init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_SetRxDmaIntPriority
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[ed]"></a>RPI_PutBytes</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rpi.o(i.RPI_PutBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RPI_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_UpdateCurrentHeight
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
</UL>

<P><STRONG><a name="[7d]"></a>RPI_Update</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, rpi.o(i.RPI_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = RPI_Update &rArr; RPI_GetInfoFromPackage &rArr; BOX_CONTROLLER_SetState &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_isValidpackage
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Update
</UL>

<P><STRONG><a name="[dc]"></a>RPI_UpdateCurrentHeight</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, rpi.o(i.RPI_UpdateCurrentHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = RPI_UpdateCurrentHeight &rArr; RPI_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_UpdateChecksum
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_StructToArray
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_PutBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Update
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
</UL>

<P><STRONG><a name="[75]"></a>SPEAKER_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, speaker.o(i.SPEAKER_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPEAKER_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[ef]"></a>SPEAKER_Mute_off</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, speaker.o(i.SPEAKER_Mute_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPEAKER_Mute_off
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_On
</UL>

<P><STRONG><a name="[f1]"></a>SPEAKER_Mute_on</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, speaker.o(i.SPEAKER_Mute_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPEAKER_Mute_on
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Off
</UL>

<P><STRONG><a name="[b3]"></a>SPEAKER_Off</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, speaker.o(i.SPEAKER_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPEAKER_Off &rArr; SPEAKER_Standby_on
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Standby_on
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Mute_on
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
</UL>

<P><STRONG><a name="[76]"></a>SPEAKER_On</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, speaker.o(i.SPEAKER_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPEAKER_On &rArr; SPEAKER_Standby_off
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Standby_off
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Mute_off
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
</UL>

<P><STRONG><a name="[f5]"></a>SPEAKER_Standby_off</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, speaker.o(i.SPEAKER_Standby_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPEAKER_Standby_off
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_On
</UL>

<P><STRONG><a name="[f4]"></a>SPEAKER_Standby_on</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, speaker.o(i.SPEAKER_Standby_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPEAKER_Standby_on
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Off
</UL>

<P><STRONG><a name="[b]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SysTick_Handler &rArr; BOX_CONTROLLER_Run &rArr; TIM_BOX_Run &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>TIM6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>TIMER_cmdUp</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, timer.o(i.TIMER_cmdUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER_cmdUp
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
</UL>

<P><STRONG><a name="[d4]"></a>TIMER_getVal</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i.TIMER_getVal))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
</UL>

<P><STRONG><a name="[cf]"></a>TIMER_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer.o(i.TIMER_init))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
</UL>

<P><STRONG><a name="[d7]"></a>TIMER_setVal</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i.TIMER_setVal))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_heightTimerFcn
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_ResetAllTimer
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_heighCheckFcn
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ResetAllStateTime
</UL>

<P><STRONG><a name="[d2]"></a>TIMER_start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TIMER_start))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
</UL>

<P><STRONG><a name="[d6]"></a>TIMER_stop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i.TIMER_stop))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_heightTimerFcn
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_StopAllTimer
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Run
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_heighCheckFcn
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_HsReset
</UL>

<P><STRONG><a name="[b7]"></a>TIMOTION_DmaCallback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, timbox.o(i.TIMOTION_DmaCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMOTION_DmaCallback &rArr; TIMOTION_rxCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMOTION_rxCpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[f9]"></a>TIMOTION_GetHeightFromLongBuffer</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, timbox.o(i.TIMOTION_GetHeightFromLongBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMOTION_GetHeightFromLongBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFrame_TIM_array2struct
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Update
</UL>

<P><STRONG><a name="[f8]"></a>TIMOTION_rxCpy</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, timbox.o(i.TIMOTION_rxCpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMOTION_rxCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMOTION_DmaCallback
</UL>

<P><STRONG><a name="[5f]"></a>TIM_BOX_DownApi</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_DownApi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_BOX_DownApi &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>TIM_BOX_GetDetectStatus</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_GetDetectStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_BOX_GetDetectStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Run
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Update
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetHeight
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetMode
</UL>

<P><STRONG><a name="[ec]"></a>TIM_BOX_GetHeight</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timbox.o(i.TIM_BOX_GetHeight))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Update
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_heighCheckFcn
</UL>

<P><STRONG><a name="[106]"></a>TIM_BOX_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timbox.o(i.TIM_BOX_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_Update
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[fd]"></a>TIM_BOX_HsDown</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_HsDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM_BOX_HsDown &rArr; BUTTON_LED_DownHsLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_DownHsLed
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[fe]"></a>TIM_BOX_HsReset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_HsReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM_BOX_HsReset &rArr; BUTTON_LED_StopHsLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_stop
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopHsLed
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[ff]"></a>TIM_BOX_HsStop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_HsStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM_BOX_HsStop &rArr; BUTTON_LED_StopHsLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopHsLed
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[100]"></a>TIM_BOX_HsUp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_HsUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM_BOX_HsUp &rArr; BUTTON_LED_UpHsLed &rArr; BUTTON_LED_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_UpHsLed
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[83]"></a>TIM_BOX_Init</STRONG> (Thumb, 306 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TIM_BOX_Init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_SetRxDmaIntPriority
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetDetectStatus
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Init
</UL>

<P><STRONG><a name="[109]"></a>TIM_BOX_MblDown</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MblDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_BOX_MblDown
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[10a]"></a>TIM_BOX_MblMic</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timbox.o(i.TIM_BOX_MblMic))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[107]"></a>TIM_BOX_MblStop</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MblStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_BOX_MblStop
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[108]"></a>TIM_BOX_MblUp</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MblUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_BOX_MblUp
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[62]"></a>TIM_BOX_MovePos1Api</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MovePos1Api))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_BOX_MovePos1Api &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MoveToPos1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>TIM_BOX_MovePos2Api</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MovePos2Api))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_BOX_MovePos2Api &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MoveToPos2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>TIM_BOX_MovePos3Api</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MovePos3Api))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_BOX_MovePos3Api &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MoveToPos3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>TIM_BOX_MovePos4Api</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MovePos4Api))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_BOX_MovePos4Api &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MoveToPos4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>TIM_BOX_MoveToPos1</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MoveToPos1))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM_BOX_MoveToPos1 &rArr; TIM_BOX_MovePos1Api &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MovePos1Api
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[102]"></a>TIM_BOX_MoveToPos2</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MoveToPos2))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM_BOX_MoveToPos2 &rArr; TIM_BOX_MovePos2Api &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MovePos2Api
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[103]"></a>TIM_BOX_MoveToPos3</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MoveToPos3))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM_BOX_MoveToPos3 &rArr; TIM_BOX_MovePos3Api &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MovePos3Api
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[104]"></a>TIM_BOX_MoveToPos4</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_MoveToPos4))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM_BOX_MoveToPos4 &rArr; TIM_BOX_MovePos4Api &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MovePos4Api
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[fc]"></a>TIM_BOX_PutBytes</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, timbox.o(i.TIM_BOX_PutBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_StopApi
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_UpApi
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SaveApi
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ResetApi
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MovePos4Api
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MovePos3Api
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MovePos2Api
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MovePos1Api
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_DownApi
</UL>

<P><STRONG><a name="[95]"></a>TIM_BOX_ReadSitPosHeight</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_ReadSitPosHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIM_BOX_ReadSitPosHeight &rArr; MY_FLASH_Read &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
</UL>

<P><STRONG><a name="[96]"></a>TIM_BOX_ReadStandPosHeight</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_ReadStandPosHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIM_BOX_ReadStandPosHeight &rArr; MY_FLASH_Read &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
</UL>

<P><STRONG><a name="[105]"></a>TIM_BOX_ResetAllStateTime</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_ResetAllStateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_BOX_ResetAllStateTime
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_setVal
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetState
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
</UL>

<P><STRONG><a name="[61]"></a>TIM_BOX_ResetApi</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_ResetApi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_BOX_ResetApi &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>TIM_BOX_Run</STRONG> (Thumb, 702 bytes, Stack size 16 bytes, timbox.o(i.TIM_BOX_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = TIM_BOX_Run &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_stop
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_start
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_setVal
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_getVal
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_cmdUp
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetState
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetState
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetMode
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetHeight
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SaveStandPos
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SaveSitPos
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ReadStandPosHeight
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ReadSitPosHeight
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetHeight
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_StopHsLed
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ResetAllStateTime
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MoveToPos4
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MoveToPos3
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MoveToPos2
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MoveToPos1
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MblUp
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MblStop
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MblMic
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_MblDown
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_HsUp
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_HsStop
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_HsReset
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_HsDown
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Run
</UL>

<P><STRONG><a name="[66]"></a>TIM_BOX_SaveApi</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_SaveApi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_BOX_SaveApi &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>TIM_BOX_SaveSitPos</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_SaveSitPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = TIM_BOX_SaveSitPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
</UL>

<P><STRONG><a name="[94]"></a>TIM_BOX_SaveStandPos</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_SaveStandPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
</UL>

<P><STRONG><a name="[8b]"></a>TIM_BOX_SetHeight</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, timbox.o(i.TIM_BOX_SetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIM_BOX_SetHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetHeight
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
</UL>

<P><STRONG><a name="[8e]"></a>TIM_BOX_SetMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timbox.o(i.TIM_BOX_SetMode))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_Update
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Update
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetHeight
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetMode
</UL>

<P><STRONG><a name="[91]"></a>TIM_BOX_SetState</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_BOX_SetState &rArr; TIM_BOX_ResetAllStateTime
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_ResetAllStateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_Update
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Update
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_SetState
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_heighCheckFcn
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_TimeoutFcn
</UL>

<P><STRONG><a name="[60]"></a>TIM_BOX_StopApi</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_StopApi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_BOX_StopApi &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>TIM_BOX_TimeoutFcn</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_TimeoutFcn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM_BOX_TimeoutFcn &rArr; TIM_BOX_SetState &rArr; TIM_BOX_ResetAllStateTime
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(i.TIM_BOX_Init)
</UL>
<P><STRONG><a name="[5e]"></a>TIM_BOX_UpApi</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_UpApi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_BOX_UpApi &rArr; TIM_BOX_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>TIM_BOX_Update</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, timbox.o(i.TIM_BOX_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TIM_BOX_Update &rArr; RPI_UpdateCurrentHeight &rArr; RPI_PutBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_UpdateCurrentHeight
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetState
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetMode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetHeight
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_UpdateCurrentHeight
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMOTION_GetHeightFromLongBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOX_CONTROLLER_Update
</UL>

<P><STRONG><a name="[10b]"></a>TIM_BOX_UpdateCurrentHeight</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timbox.o(i.TIM_BOX_UpdateCurrentHeight))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Update
</UL>

<P><STRONG><a name="[54]"></a>TIM_BOX_heighCheckFcn</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, timbox.o(i.TIM_BOX_heighCheckFcn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM_BOX_heighCheckFcn &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_stop
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_setVal
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetState
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetHeight
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timbox.o(i.TIM_BOX_Init)
</UL>
<P><STRONG><a name="[72]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[6e]"></a>TIM_DeInit</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, stm32f10x_tim.o(i.TIM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[2]"></a>TIM_HANDSET_DisplayHeight</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timhandset.o(i.TIM_HANDSET_DisplayHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_HANDSET_DisplayHeight &rArr; TIM_HANDSET_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_putBytes
</UL>
<BR>[Address Reference Count : 5]<UL><LI> timhandset.o(.data)
<LI> rpi.o(.data)
<LI> buttonleds.o(.data)
<LI> jiecangbox.o(.data)
<LI> timbox.o(.data)
</UL>
<P><STRONG><a name="[b9]"></a>TIM_HANDSET_DmaCallback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, timhandset.o(i.TIM_HANDSET_DmaCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_HANDSET_DmaCallback &rArr; TIM_HANDSET_rxCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_rxCpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[10f]"></a>TIM_HANDSET_GetCommandFromDataPackage</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, timhandset.o(i.TIM_HANDSET_GetCommandFromDataPackage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_HANDSET_GetCommandFromDataPackage
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_Update
</UL>

<P><STRONG><a name="[0]"></a>TIM_HANDSET_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, timhandset.o(i.TIM_HANDSET_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TIM_HANDSET_Init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_SetRxDmaIntPriority
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>
<BR>[Address Reference Count : 5]<UL><LI> timhandset.o(.data)
<LI> rpi.o(.data)
<LI> buttonleds.o(.data)
<LI> jiecangbox.o(.data)
<LI> timbox.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>TIM_HANDSET_Run</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timhandset.o(i.TIM_HANDSET_Run))
<BR>[Address Reference Count : 5]<UL><LI> timhandset.o(.data)
<LI> rpi.o(.data)
<LI> buttonleds.o(.data)
<LI> jiecangbox.o(.data)
<LI> timbox.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>TIM_HANDSET_Update</STRONG> (Thumb, 282 bytes, Stack size 16 bytes, timhandset.o(i.TIM_HANDSET_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM_HANDSET_Update &rArr; TIM_BOX_SetState &rArr; TIM_BOX_ResetAllStateTime
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_GetState
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_GetCommandFromDataPackage
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetState
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Update
</UL>
<BR>[Address Reference Count : 5]<UL><LI> timhandset.o(.data)
<LI> rpi.o(.data)
<LI> buttonleds.o(.data)
<LI> jiecangbox.o(.data)
<LI> timbox.o(.data)
</UL>
<P><STRONG><a name="[10e]"></a>TIM_HANDSET_putBytes</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, timhandset.o(i.TIM_HANDSET_putBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM_HANDSET_putBytes &rArr; UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_DisplayHeight
</UL>

<P><STRONG><a name="[4]"></a>TIM_HANDSET_rxCpy</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, timhandset.o(i.TIM_HANDSET_rxCpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_HANDSET_rxCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_DmaCallback
</UL>
<BR>[Address Reference Count : 5]<UL><LI> timhandset.o(.data)
<LI> rpi.o(.data)
<LI> buttonleds.o(.data)
<LI> jiecangbox.o(.data)
<LI> timbox.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>

<P><STRONG><a name="[b2]"></a>UART3_putByte</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, myuart.o(i.UART3_putByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART3_putByte
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
</UL>

<P><STRONG><a name="[44]"></a>UART5_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_it.o(i.UART5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART5_IRQHandler &rArr; DEBUG_GetString &rArr; UART5_getString &rArr; UARTx_getString
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>UART5_defaultInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, myuart.o(i.UART5_defaultInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UART5_defaultInit &rArr; UART5_init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_start
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_setPriority
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_enableRxInt
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Init
</UL>

<P><STRONG><a name="[114]"></a>UART5_enableRxInt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, myuart.o(i.UART5_enableRxInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART5_enableRxInt &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_defaultInit
</UL>

<P><STRONG><a name="[ac]"></a>UART5_getString</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, myuart.o(i.UART5_getString))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART5_getString &rArr; UARTx_getString
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_getString
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_GetString
</UL>

<P><STRONG><a name="[113]"></a>UART5_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, myuart.o(i.UART5_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UART5_init &rArr; UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_defaultInit
</UL>

<P><STRONG><a name="[119]"></a>UART5_putByte</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, myuart.o(i.UART5_putByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART5_putByte
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[115]"></a>UART5_setPriority</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, myuart.o(i.UART5_setPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART5_setPriority &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_defaultInit
</UL>

<P><STRONG><a name="[116]"></a>UART5_start</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, myuart.o(i.UART5_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART5_start
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_defaultInit
</UL>

<P><STRONG><a name="[b0]"></a>UARTx_ClearRxBuffer</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, myuart.o(i.UARTx_ClearRxBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTx_ClearRxBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_UartFullFcn
</UL>

<P><STRONG><a name="[99]"></a>UARTx_Init</STRONG> (Thumb, 558 bytes, Stack size 32 bytes, myuart.o(i.UARTx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UARTx_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_init
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_Init
</UL>

<P><STRONG><a name="[a9]"></a>UARTx_PutBytesDMA</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, myuart.o(i.UARTx_PutBytesDMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UARTx_PutBytesDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_PutBytes
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_PutBytes
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_putBytes
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LED_putBytes
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_PutBytes
</UL>

<P><STRONG><a name="[9a]"></a>UARTx_RxDmaInit</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, myuart.o(i.UARTx_RxDmaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UARTx_RxDmaInit &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_Init
</UL>

<P><STRONG><a name="[9b]"></a>UARTx_SetRxDmaIntPriority</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, myuart.o(i.UARTx_SetRxDmaIntPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UARTx_SetRxDmaIntPriority &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_Init
</UL>

<P><STRONG><a name="[9c]"></a>UARTx_Start</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, myuart.o(i.UARTx_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTx_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_HANDSET_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_LEDS_Init
</UL>

<P><STRONG><a name="[118]"></a>UARTx_getString</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, myuart.o(i.UARTx_getString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTx_getString
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_getString
</UL>

<P><STRONG><a name="[11c]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Start
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_start
</UL>

<P><STRONG><a name="[123]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_SetRxDmaIntPriority
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_RxDmaInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_PutBytesDMA
</UL>

<P><STRONG><a name="[11d]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[111]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_putByte
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_putByte
</UL>

<P><STRONG><a name="[112]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[117]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_enableRxInt
</UL>

<P><STRONG><a name="[11e]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Init
</UL>

<P><STRONG><a name="[ab]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_GetString
</UL>

<P><STRONG><a name="[110]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_putByte
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_putByte
</UL>

<P><STRONG><a name="[a]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[126]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[138]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[af]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_heightTimerFcn
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RPI_GetInfoFromPackage
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Update
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_UartFullFcn
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Run
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Update
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIECANG_BOX_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BOX_heighCheckFcn
</UL>

<P><STRONG><a name="[139]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[13a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[13b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[55]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, myuart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fputc &rArr; UART5_putByte
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_putByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[4b]"></a>main</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main_1.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = main &rArr; ADDON_BOARD_Update &rArr; RPI_Update &rArr; RPI_GetInfoFromPackage &rArr; BOX_CONTROLLER_SetState &rArr; TIM_BOX_SaveStandPos &rArr; MY_FLASH_Write &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_FLASH_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Update
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDON_BOARD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[f6]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[f7]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[f3]"></a>Delay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, speaker.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPEAKER_Off
</UL>

<P><STRONG><a name="[c7]"></a>EE_FindValidPage</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, eeprom.o(i.EE_FindValidPage))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>

<P><STRONG><a name="[c0]"></a>EE_Format</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, eeprom.o(i.EE_Format))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EE_Format &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[c6]"></a>EE_PageTransfer</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, eeprom.o(i.EE_PageTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_FindValidPage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>

<P><STRONG><a name="[c5]"></a>EE_VerifyPageFullWriteVariable</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, eeprom.o(i.EE_VerifyPageFullWriteVariable))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_FindValidPage
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[127]"></a>_printf_core</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
